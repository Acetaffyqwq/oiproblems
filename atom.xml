<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://acetaffyqwq.github.io/atom.xml" rel="self"/>
  
  <link href="https://acetaffyqwq.github.io/"/>
  <updated>2024-03-11T11:38:45.479Z</updated>
  <id>https://acetaffyqwq.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>title</title>
    <link href="https://acetaffyqwq.github.io/2024/03/11/title/"/>
    <id>https://acetaffyqwq.github.io/2024/03/11/title/</id>
    <published>2024-03-11T11:38:22.000Z</published>
    <updated>2024-03-11T11:38:45.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="鞅"><a href="#鞅" class="headerlink" title="鞅"></a>鞅</h2><p>鞅最开始用来研究赌博策略问题，后来引入到数学中。</p><p>先考虑这样一个公平赌博局面，每一轮，你都可以下注 $x$ 元，然后有 $\frac{1}{2}$ 的概率你可以获得 $2x$ 元，$\frac{1}{2}$ 的概率输光。</p><p>此时我们提出一个赌博策略，这个策略每次下注多少由前面的输赢情况进行决定。</p><p>我们设一组独立随机变量 ${Y_1,Y_2,…}$ 表示前面局面的输赢情况，$Y_i&#x3D;1$ 表示第 $i$ 局赢，$Y_i&#x3D;-1$ 表示第 $i$ 局输。</p><p>令第 $i$ 轮下注 $b_i$ 元，容易发现 $b_i$ 由 $Y_1,Y_2,…,Y_{n-1}$ 的取值决定。</p><p>令 $X_i$ 表示第 $i$ 轮结束后的的钱数，那么有：</p><p>$$<br>X_n&#x3D;X_0+\sum_{i&#x3D;1} b_iY_i<br>$$</p><p>此时我们考虑前 $n$ 轮已经结束，计算 $X_{n+1}$ ：</p><p>$$<br>E[X_{n+1}|{Y_1,Y_2,…,Y_n}]&#x3D;E[X_n+b_{n+1}Y_{n+1}|{Y_1,Y_2,…,Y_n}]<br>$$</p><p>此时由于 $X_n$ 和 $b_i$ 显然已经为定值。</p><p>$$<br>&#x3D;X_n+b_{n+1}E[Y_{n+1}|{Y_1,Y_2,…,Y_n}]&#x3D;X_n<br>$$</p><p>因为 $Y_i$ 间独立。</p><p>此时说明了 $X_{n+1}&#x3D;X_n$，通俗解释就是在公平赌博情况下，不存在一种策略使得自己获利。</p><p>此时，设 ${Y_n},{X_n}$ 为两个随机变量序列，且 $X_n$ 可以由 $Y_1,Y_2,…,Y_n$ 唯一确定，并且满足：</p><p>$$<br>E[X_{n+1}|{Y_1,Y_2,…,Y_n}]&#x3D;X_n<br>$$</p><p>则称 $X$ 为 $Y$ 的<strong>鞅</strong>。</p><h2 id="停时"><a href="#停时" class="headerlink" title="停时"></a>停时</h2><p>注意到，刚才的研究是一个无限轮的赌博问题，赌徒无法通过调整策略获益，那么考虑赌徒可以自己控制某一轮开始就不赌了呢？这样看上去貌似可以获利（比如获利了马上退出）。</p><p>此时引入一个<strong>停时</strong>，是一个随机变量 $T$，可以通过 $X_1,X_2,…,X_n$ 的取值来决定 $T$ 与 $n$ 的大小关系，换句话说就是可以通过前面的结果推出是继续还是停止。</p><p>那么此时令这个停时的收益是 $E[M_T]$，在公平赌博局面中，$M$ 是 $X$ 的鞅。</p><p>我们想知道是否有：</p><p>$$<br>E[M_T]&#x3D;E[M_0]<br>$$</p><p>这若成立，说明赌徒无法通过调整自己的停止时间获得收益（也就是见好就收不会有收益）。</p><p>但是对于一般的情况，这不一定成立，但若满足以下三个条件之一，则必然成立：</p><p>$$<br>P{ T &lt; \infty }&#x3D;1\<br>E[|M_T|]&lt;\infty\<br>\lim_{n\to \infty} E[|M_n|I_|]&#x3D;0<br>$$</p><p>这是<strong>鞅停时定理</strong>。</p><p>证明先咕着，事实上 OI 中绝大多数题目都满足第二条。</p><p>但是最上面提到的公平赌博中的策略<strong>不一定满足</strong>鞅停时定理。  </p><p>举个例子，一个经典的赌博策略是初始赌本为 $1$，赢了就跑，输了赌本翻倍，这样保证了跑的时候一定赢 $1$ 元，连输的概率也不大，被很多赌徒视为必胜法则。</p><p>但事实上很明显因为输完就没了，开始赌本 $X_0$ 必然有限，所以 $P{T&lt; \log X_0}&#x3D;1$，所以满足鞅停时定理，也就是这种策略无收益。</p><p>再来个例子，初始赌本 $1$， 赢了赌本减 $1$，输了赌本加 $1$，输光为止。</p><p>这个策略的高妙之处在于，输会让接下来赢的多，赢会让接下来输的少，换句话说就是一输一赢，一赢一输都可以赚 $1$ 元。</p><p>会发现这个策略上面三个条件都不满足。</p><p>是说明这个策略能赢吗，显然不是，只能说明鞅停时定理是充分条件而非必要条件。</p><h2 id="求-E-T"><a href="#求-E-T" class="headerlink" title="求 $E[T]$"></a>求 $E[T]$</h2><p>扯了这么多，来考虑一下和 OI 相关的内容。</p><p>OI 中的题一般是，给定一个结束条件，求期望步数。</p><p>套路是，对一个局面设一个势能函数 $\varphi(X)$，满足 $\varphi(X)&#x3D;0$ 则 $X$ 是一个终止状态，并且满足 $X$ 后继状态势能会减一。</p><p>由于 $E[\varphi(X_n)]-E[\varphi(X_{n+1})]&#x3D;1$，所以 $f(X_n)&#x3D;\varphi(X_n)+n$ 是 $X$ 的一个鞅。</p><p>如果满足条件，那么去用一下停时定理。</p><p>$$<br>E[f(X_T)]&#x3D;E[f(X_0)]\<br>E[\varphi(X_T)]+E[T]&#x3D;E[\varphi(X_0)]<br>$$</p><p>上面的要求保证了 $\varphi(X_T)$ 为定值，$\varphi(X_0)$ 也为定值，因此直接相减即可。</p><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>注意到这类问题有一个暴力 dp 就是设一个状态到结束的期望步数，转移是后继状态加一。</p><p>所以构造这个构造函数的过程本质就是在猜测 dp 的答案。</p><p>这样看来这个好像挺没用的，相当于一个顺推一个逆推。</p><h2 id="套路"><a href="#套路" class="headerlink" title="套路"></a>套路</h2><p>这个东西主要还是解决有多个局面，彼此之间不独立的问题。</p><p>这样设出每个子局面的势能，求和就是总势能。</p><p>然后要去满足差为 $1$ 的条件，列出一次转移的变化值，然后一般可以把每个局面的东西独立开来，解出势能。</p><p>其实感觉这个东西和 SG 函数的套路比较类似，但是它是会互相影响的。</p><h3 id="CF1025G-3200"><a href="#CF1025G-3200" class="headerlink" title="CF1025G *3200"></a><a href="https://codeforces.com/problemset/problem/1025/G">CF1025G</a> *3200</h3><p>注意到一个子局面只和其大小有关，并且最终状态唯一，直接设 $f(n)$ 表示有 $n$ 个 acquired 点的势能。</p><p>此时很多题解直接针对一组 $a,b$ 进行分析，实际上这步是不显然的，因为前面的条件只要求后继状态的和的差，这样分析是保证了一组 $a,b$ 的后继差都是 $1$，要求更严格，但是不一定解的出。</p><p>但事实上由于后面的推导中可以发现 $a,b$ 的势能函数是独立的，所以一般是可以解出的，不过直接枚举所有 $a,b$ 去列式肯定没问题。</p><p>$$<br>f(a)+f(b)-1&#x3D;\frac{af(0)+bf(0)+f(a+1)+f(b+1)}{2}<br>$$</p><p>独立一下，把 $-1$ 拆开分配给 $a,b$。</p><p>$$<br>f(a)-\frac{1}{2}&#x3D;\frac{af(0)+f(a+1)}{2}<br>$$</p><p>此时 $af(0)$ 很引荐，但是注意到这个势能函数是我们自己设的，与具体是啥局面没啥关系，解出来只要满足那个式子就行，所以 $f(0)$ 是啥不重要，直接给个 $f(0)&#x3D;0$，然后解一下，得到：</p><p>$$<br>f(n)&#x3D;1-2^n<br>$$</p><h3 id="CF1479E-3500"><a href="#CF1479E-3500" class="headerlink" title="CF1479E *3500"></a><a href="https://www.luogu.com.cn/problem/CF1479E">CF1479E</a> *3500</h3><p>将整体考虑，直接列式，设 $S&#x3D;\sum_{i&#x3D;1}^m f(a_i)$：</p><p>$$<br>-1+\sum_{i&#x3D;1}^m f(a_i)&#x3D;\sum_{i&#x3D;1}^m \frac{a_i}{n}\times \frac{(f(a_i-1)+f(1)+S-f(a_i))+\frac{a_iS}{n}+\sum_{j\ne i} \frac{a_j}{n} (f(a_i-1)+f(a_j+1)+S-f(a_i)-f(a_j))}{2}<br>$$</p><p>套路性的，把每个 $f(a_i)$ 相关的单独拿出来。</p><p>$$<br>-\frac{a_i}{n}+f(a_i)&#x3D;\<br>\frac{a_i}{n}\times \frac{f(a_i-1)+f(1)+\frac{a_if(a_i)}{n}+\frac{n-a_i}{n}f(a_i-1)}{2}+\sum_{j\ne i} \frac{a_j}{n}\times \frac{f(a_i)+\frac{a_j}{n}f(a_i)+\frac{a_i}{n}f(a_i+1)+\sum_{k\ne i\ne j} \frac{a_k}{n}f(a_i)}{2}\<br>&#x3D;\frac{a_i}{2n}(f(1)+\frac{a_i}{n}f(a_i)+\frac{2n-a_i}{n}f(a_i-1))+\frac{n-a_i}{2n}(\frac{2n-a_i}{n}f(a_i)+\frac{a_i}{n}f(a_i+1))\<br>$$</p><p>把 $a_i$ 换成 $x$，然后移项得到：</p><p>$$<br>-\frac{x}{n}&#x3D;\frac{x}{2n^2}(nf(1)+(2x-3n)f(x)+(2n-x)f(x-1)+(n-x)f(x+1))\<br>-2n&#x3D;nf(1)+(2x-3n)f(x)+(2n-x)f(x-1)+(n-x)f(x+1)<br>$$</p><p>此时递推式从前面两个递推，因此 $f(0),f(1)$ 可以随意设。</p><p>令 $f(0)&#x3D;0,f(1)&#x3D;-2$，这样得到：<br>$$<br>0&#x3D;(2x-3n)f(x)+(2n-x)f(x-1)+(n-x)f(x+1)<br>$$</p><p>$n$ 很大，无法线性求逆元，因此递推的时候维护分子分母即可，直到要查询的值的时候再求出逆元，复杂度 $O(n+m\log n)$。</p><h3 id="CF850F-2800"><a href="#CF850F-2800" class="headerlink" title="CF850F *2800"></a><a href="https://www.luogu.com.cn/problem/CF850F">CF850F</a> *2800</h3><p>其实大概都是一个套路。</p><p>设一个颜色势能为 $f(a_i)$，总球数为 $s$，$S&#x3D;\sum f(a_i)$。</p><p>$$<br>-1+S&#x3D;\<br>\frac{1}{s(s-1)}(\sum_{i\ne j} a_ia_j(f(a_i+1)+f(a_j-1)+S-f(a_i)-f(a_j))+\sum a_i(a_i-1) S)\<br>-1&#x3D;\frac{1}{s(s-1)}(\sum_{i\ne j} a_ia_j(f(a_i+1)+f(a_j-1)-f(a_i)-f(a_j)))\<br>-\frac{a_i}{s}&#x3D;\frac{1}{s(s-1)}(s-a_i)a_i(f(a_i+1)+f(a_i-1)-2f(a_i))\<br>\frac{-s+1}{s-a_i}&#x3D;f(a_i+1)+f(a_i-1)-2f(a_i)<br>$$</p><p>设 $g(x)&#x3D;f(x+1)-f(x)$</p><p>$$<br>\frac{-s+1}{s-x}&#x3D;g(x)-g(x-1)<br>$$</p><p>容易发现这个东西本质上就是对左边的东西做两次前缀和，因此 $f(a_i)$ 可以简单递推，但是注意到 $\sum a_i$ 很大，推一下式子。</p><p>令 $f_0&#x3D;f_1&#x3D;0$，$c_x&#x3D;\frac{-s+1}{s-x}$ 。</p><p>$$<br>f_s&#x3D;\sum_{j&#x3D;1}^{s-1} c_j\binom{s-j}{1}&#x3D;\sum_{j&#x3D;1}^{s-1} -s+1&#x3D;(s-1)(1-s)<br>$$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;鞅&quot;&gt;&lt;a href=&quot;#鞅&quot; class=&quot;headerlink&quot; title=&quot;鞅&quot;&gt;&lt;/a&gt;鞅&lt;/h2&gt;&lt;p&gt;鞅最开始用来研究赌博策略问题，后来引入到数学中。&lt;/p&gt;
&lt;p&gt;先考虑这样一个公平赌博局面，每一轮，你都可以下注 $x$ 元，然后有 $&#92;frac{</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://acetaffyqwq.github.io/2024/03/11/hello-world/"/>
    <id>https://acetaffyqwq.github.io/2024/03/11/hello-world/</id>
    <published>2024-03-11T10:58:23.364Z</published>
    <updated>2024-03-11T10:58:23.364Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
